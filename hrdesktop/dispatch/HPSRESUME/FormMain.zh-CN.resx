<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnLoad.Text" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>姓名</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>职业</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>53, 12</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>简历文件</value>
  </data>
  <data name="Column1.HeaderText" xml:space="preserve">
    <value>编号</value>
  </data>
  <data name="Column2.HeaderText" xml:space="preserve">
    <value>姓名</value>
  </data>
  <data name="Column3.HeaderText" xml:space="preserve">
    <value>国籍</value>
  </data>
  <data name="Column4.HeaderText" xml:space="preserve">
    <value>性别</value>
  </data>
  <data name="Column5.HeaderText" xml:space="preserve">
    <value>生日</value>
  </data>
  <data name="Column6.HeaderText" xml:space="preserve">
    <value>本国住址</value>
  </data>
  <data name="Column7.HeaderText" xml:space="preserve">
    <value>现住址</value>
  </data>
  <data name="Column8.HeaderText" xml:space="preserve">
    <value>电话</value>
  </data>
  <data name="Column9.HeaderText" xml:space="preserve">
    <value>最近车站</value>
  </data>
  <data name="Column10.HeaderText" xml:space="preserve">
    <value>开始工作日</value>
  </data>
  <data name="Column11.HeaderText" xml:space="preserve">
    <value>结束工作日</value>
  </data>
  <data name="Column12.HeaderText" xml:space="preserve">
    <value>工作地点</value>
  </data>
  <data name="Column13.HeaderText" xml:space="preserve">
    <value>工作内容</value>
  </data>
  <data name="Column14.HeaderText" xml:space="preserve">
    <value>工作经验</value>
  </data>
  <data name="Column15.HeaderText" xml:space="preserve">
    <value>职位</value>
  </data>
  <data name="Column30.HeaderText" xml:space="preserve">
    <value>工作范围</value>
  </data>
  <data name="Column16.HeaderText" xml:space="preserve">
    <value>派遣开始日</value>
  </data>
  <data name="Column17.HeaderText" xml:space="preserve">
    <value>派遣结束日</value>
  </data>
  <data name="Column18.HeaderText" xml:space="preserve">
    <value>派遣地址</value>
  </data>
  <data name="Column19.HeaderText" xml:space="preserve">
    <value>派遣内容</value>
  </data>
  <data name="Column20.HeaderText" xml:space="preserve">
    <value>派遣经验</value>
  </data>
  <data name="Column21.HeaderText" xml:space="preserve">
    <value>派遣职位</value>
  </data>
  <data name="Column22.HeaderText" xml:space="preserve">
    <value>派遣人</value>
  </data>
  <data name="Column24.HeaderText" xml:space="preserve">
    <value>培训开始日</value>
  </data>
  <data name="Column25.HeaderText" xml:space="preserve">
    <value>培训结束日</value>
  </data>
  <data name="Column26.HeaderText" xml:space="preserve">
    <value>培训机构</value>
  </data>
  <data name="Column27.HeaderText" xml:space="preserve">
    <value>培训内容</value>
  </data>
  <data name="Column28.HeaderText" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="Column29.HeaderText" xml:space="preserve">
    <value>学校开始时间</value>
  </data>
  <data name="Column23.HeaderText" xml:space="preserve">
    <value>学校结束时间</value>
  </data>
  <data name="Column31.HeaderText" xml:space="preserve">
    <value>学校</value>
  </data>
  <data name="Column32.HeaderText" xml:space="preserve">
    <value>专业</value>
  </data>
  <data name="Column33.HeaderText" xml:space="preserve">
    <value>学位</value>
  </data>
  <data name="btnMemberinfo.Text" xml:space="preserve">
    <value>基本信息</value>
  </data>
  <data name="btnWork.Text" xml:space="preserve">
    <value>工作经历</value>
  </data>
  <data name="btnDispatch.Text" xml:space="preserve">
    <value>派遣经历</value>
  </data>
  <data name="btnExport.Text" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="btnSearch.Text" xml:space="preserve">
    <value>检索</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>经验</value>
  </data>
  <data name="btnMailSend.Text" xml:space="preserve">
    <value>邮件发送</value>
  </data>
  <data name="btnTrain.Text" xml:space="preserve">
    <value>资格</value>
  </data>
  <data name="btnCreateBiza.Text" xml:space="preserve">
    <value>签证</value>
  </data>
  <data name="btnSchool.Text" xml:space="preserve">
    <value>学历</value>
  </data>
  <data name="btnImportCsv.Text" xml:space="preserve">
    <value>Csv导入</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>992, 559</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>人才管理</value>
  </data>
</root>